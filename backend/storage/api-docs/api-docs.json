{
    "openapi": "3.0.0",
    "info": {
        "title": "APIs For Library Managament System",
        "version": "1.0.0"
    },
    "paths": {
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout a user",
                "operationId": "ad65cbbd4e9f201619eae184a5961a98",
                "responses": {
                    "200": {
                        "description": "User logged out successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/authors": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Get all authors",
                "operationId": "b1de4facd6962392c6fde61f8a7b097a",
                "responses": {
                    "200": {
                        "description": "A list of authors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Author"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Authors"
                ],
                "summary": "Create a new author",
                "operationId": "ff9d12ef46fc5034a0d4adf9d10b6de3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Author"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Author created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/authors/{author}": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Get a specific author",
                "operationId": "78b25f598924d1fa15e002e5ae0fb23b",
                "parameters": [
                    {
                        "name": "author",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Author details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Author not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Authors"
                ],
                "summary": "Update an existing author",
                "operationId": "ec6a0e866f734a82a5034fc1f6a75a5f",
                "parameters": [
                    {
                        "name": "author",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Author"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Author updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Author not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Authors"
                ],
                "summary": "Delete an author",
                "operationId": "41ba7423ce8f274260b4b09ecb77db01",
                "parameters": [
                    {
                        "name": "author",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Author deleted successfully"
                    },
                    "404": {
                        "description": "Author not found"
                    }
                }
            }
        },
        "/api/books/{book}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get a specific book by ID",
                "operationId": "c977385c32095dec31075ca1f77c3cd7",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "The ID of the book",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single book",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Update a book",
                "operationId": "66285ba337428238f9ea30fdca856ef6",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "The ID of the book to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "isbn": {
                                        "type": "string"
                                    },
                                    "published_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "author_id": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Available",
                                            "Borrowed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Book updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete a book",
                "operationId": "5bf2d40ecbd2142dabcca0ec2b075369",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "The ID of the book to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book deleted"
                    }
                }
            }
        },
        "/api/books": {
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "operationId": "72f82e1cd6f08112323f87053277ca99",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "isbn",
                                    "published_date",
                                    "author_id",
                                    "status"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "isbn": {
                                        "type": "string"
                                    },
                                    "published_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "author_id": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Available",
                                            "Borrowed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/books/{book}/borrow": {
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Borrow a book",
                "operationId": "6c775612983471ed15b583d8f8c2e451",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "The ID of the book to borrow",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book borrowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BorrowRecord"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/books/{book}/return": {
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Return a borrowed book",
                "operationId": "7ba17ec293352a14e5e820ec68c899d6",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "The ID of the book to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BorrowRecord"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/borrow-records": {
            "get": {
                "tags": [
                    "BorrowRecord"
                ],
                "summary": "Retrieve all borrowed book records",
                "operationId": "54fa7dbc9b043c57a6fa0d29cd30431d",
                "responses": {
                    "200": {
                        "description": "List of borrowed book records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page",
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BorrowRecord"
                                            }
                                        },
                                        "total": {
                                            "description": "Total number of records",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/borrow-records/{id}": {
            "get": {
                "tags": [
                    "BorrowRecord"
                ],
                "summary": "Retrieve a specific borrowed book record",
                "operationId": "68f687a5c5d6e5d02fd1e41f42472c8d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the borrowed record",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Borrowed book record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BorrowRecord"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Borrowed record not found"
                    }
                }
            }
        },
        "/api/fines": {
            "get": {
                "tags": [
                    "Fines"
                ],
                "summary": "Get a list of fines",
                "operationId": "a0243cc10adda59ce9fadd7c0de79950",
                "responses": {
                    "200": {
                        "description": "A list of fines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fine"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fines/{id}": {
            "get": {
                "tags": [
                    "Fines"
                ],
                "summary": "Get a fine by ID",
                "operationId": "3f0386eea32d854a65dd3ab3926155b3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Fine ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fine details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/borrow-records/{borrowRecord}/calculate-fine": {
            "post": {
                "tags": [
                    "Fines"
                ],
                "summary": "Calculate a fine for a borrow record",
                "operationId": "366058dbf549b5c4aa535edd6782adae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Borrow Record ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Fine calculated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fine"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "No fine applicable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No fine applicable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reservations": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get a list of reservations",
                "operationId": "f10e68ff0ce263ef754b2f640eda8d93",
                "responses": {
                    "200": {
                        "description": "A list of reservations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reservation"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Create a new reservation",
                "operationId": "4f59911f11563f79b4f01bd02222607d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "book_id": {
                                        "description": "Book ID",
                                        "type": "integer"
                                    },
                                    "reserved_from": {
                                        "description": "Reservation start date",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "reserved_to": {
                                        "description": "Reservation end date",
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reservation created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Book not available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book is not available for reservation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reservations/{id}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get a reservation by ID",
                "operationId": "14c077250033bb10a7305f9724f10bd4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Update a reservation status",
                "operationId": "7b80201e204732d789095d85fe3bc71d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "Reservation status (Confirmed, Cancelled)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/books/{book_id}/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get a list of reviews for a book",
                "operationId": "5e0e01b275e0f6efbedab217d59fdc3b",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "path",
                        "description": "Book ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of reviews for the book",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Review"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a new review for a book",
                "operationId": "58942432bd9abaf9f967727f7a49ff56",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "path",
                        "description": "Book ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "comment": {
                                        "description": "User comment",
                                        "type": "string"
                                    },
                                    "rating": {
                                        "description": "Rating between 1 and 5",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reviews/{review_id}": {
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a review",
                "operationId": "22516cd84380307be0f4d3c16a1bd1d8",
                "parameters": [
                    {
                        "name": "review_id",
                        "in": "path",
                        "description": "Review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Review deleted successfully"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update a review",
                "operationId": "6ec2e1c8ef1ed0f0fcbf37ca9827ca74",
                "parameters": [
                    {
                        "name": "review_id",
                        "in": "path",
                        "description": "Review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "comment": {
                                        "description": "Updated comment",
                                        "type": "string"
                                    },
                                    "rating": {
                                        "description": "Updated rating between 1 and 5",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "operationId": "566aed8efb436ca506e0ef51a032ecd9",
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "be551c1d694a01c164966f58bfa77013",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user",
                "operationId": "f310aa35b9243239c65dbc8b8f4b135e",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "operationId": "f1f65c5e73cb0b10fdd850447b672c28",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "cf641f0b739211ff3a1c21b1ef310591",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AuthResponse": {
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "access_token": {
                        "description": "Access token",
                        "type": "string"
                    },
                    "token_type": {
                        "description": "Token type",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuthRegister": {
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "access_token": {
                        "description": "Access token",
                        "type": "string"
                    },
                    "token_type": {
                        "description": "Token type",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuthLogin": {
                "properties": {
                    "email": {
                        "description": "User's email",
                        "type": "string"
                    },
                    "password": {
                        "description": "User's password",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Author": {
                "properties": {
                    "id": {
                        "description": "Author ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Author's name",
                        "type": "string"
                    },
                    "bio": {
                        "description": "Author's biography",
                        "type": "string",
                        "nullable": true
                    },
                    "birthdate": {
                        "description": "Author's birthdate",
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Book": {
                "properties": {
                    "id": {
                        "description": "Book ID",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Book title",
                        "type": "string"
                    },
                    "isbn": {
                        "description": "ISBN",
                        "type": "string"
                    },
                    "author_id": {
                        "description": "Author ID",
                        "type": "integer"
                    },
                    "published_date": {
                        "description": "Published date",
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "description": "Book status",
                        "type": "string",
                        "enum": [
                            "Available",
                            "Borrowed"
                        ]
                    }
                },
                "type": "object"
            },
            "BorrowRecord": {
                "properties": {
                    "id": {
                        "description": "Record ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "book_id": {
                        "description": "Book ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "borrowed_at": {
                        "description": "Borrowed date and time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "due_at": {
                        "description": "Due date and time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "returned_at": {
                        "description": "Return date and time",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Fine": {
                "properties": {
                    "id": {
                        "description": "Fine ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "borrow_record_id": {
                        "description": "Borrow Record ID",
                        "type": "integer"
                    },
                    "amount": {
                        "description": "Amount of fine",
                        "type": "number",
                        "format": "float"
                    },
                    "paid": {
                        "description": "Paid status",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "FinePayment": {
                "properties": {
                    "paid": {
                        "description": "Payment status",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Reservation": {
                "properties": {
                    "id": {
                        "description": "Reservation ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "book_id": {
                        "description": "Book ID",
                        "type": "integer"
                    },
                    "reserved_from": {
                        "description": "Reservation start date",
                        "type": "string",
                        "format": "date"
                    },
                    "reserved_to": {
                        "description": "Reservation end date",
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "description": "Reservation status (Confirmed, Cancelled)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Review": {
                "properties": {
                    "id": {
                        "description": "Review ID",
                        "type": "integer"
                    },
                    "book_id": {
                        "description": "Book ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "comment": {
                        "description": "User comment on the book",
                        "type": "string"
                    },
                    "rating": {
                        "description": "User rating of the book (1 to 5)",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User's name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email",
                        "type": "string"
                    },
                    "password": {
                        "description": "User's password",
                        "type": "string"
                    },
                    "role": {
                        "description": "User's role",
                        "type": "string",
                        "enum": [
                            "Admin",
                            "Librarian",
                            "Member"
                        ]
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Authors",
            "description": "Authors"
        },
        {
            "name": "Books",
            "description": "Books"
        },
        {
            "name": "BorrowRecord",
            "description": "BorrowRecord"
        },
        {
            "name": "Fines",
            "description": "Fines"
        },
        {
            "name": "Reservations",
            "description": "Reservations"
        },
        {
            "name": "Reviews",
            "description": "Reviews"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}